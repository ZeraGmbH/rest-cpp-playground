/**
 * SourceApi
 * A Web API for controlling a source.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>
#include <QDebug>

#include <VfSimplePeer/vfsimplegetter.h>

#include "OAIVeinApiHandler.h"
#include "OAIVeinApiRequest.h"
#include "veinentrysingleton.h"



namespace OpenAPI {

OAIVeinApiHandler::OAIVeinApiHandler(){

}

OAIVeinApiHandler::~OAIVeinApiHandler(){

}

void OAIVeinApiHandler::apiV1VeinGetInfoPost(OAIVeinGet oai_vein_get) {
    Q_UNUSED(oai_vein_get);
    auto reqObj = qobject_cast<OAIVeinApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIVeinGetResponse res;

        QJsonObject wJson;
        wJson.insert("ReceivedEntityID", oai_vein_get.getEntityId());
        wJson.insert("ReceivedComponentName", oai_vein_get.getComponentName());
        wJson.insert("ReceivedMiscInfo", oai_vein_get.getMiscFieldForInfo());

        QJsonDocument wDoc(wJson);

        VeinEntrySingleton::getInstance().subscribeToEntity(0);

        VfSimpleGetterPtr wGetPtr = VeinEntrySingleton::getInstance().triggerGetComponent(0, "Entities");

        connect(wGetPtr.get(), &VfSimpleGetter::sigGetFinish, this, &OAIVeinApiHandler::apiV1VeinGetInfoPostResponse);
        res.setReturnInformation(OAIObject(wDoc.toJson(QJsonDocument::Compact)));
        reqObj->apiV1VeinGetInfoPostResponse(res);
    }
}
void OAIVeinApiHandler::apiV1VeinSetInfoPost(OAIVeinSet oai_vein_set) {
    Q_UNUSED(oai_vein_set);
    auto reqObj = qobject_cast<OAIVeinApiRequest*>(sender());
    if( reqObj != nullptr )
    {
        OAIProblemDetails res;

        res.setStatus(200);
        res.setDetail(oai_vein_set.getComponentName());
        res.setTitle(oai_vein_set.getMiscFieldForInfo());
        res.setType(QString::number(oai_vein_set.getEntityId()));

        reqObj->apiV1VeinSetInfoPostResponse(res);
    }
}

void OAIVeinApiHandler::apiV1VeinGetInfoPostResponse(bool ok, QVariant data)
{
    qWarning() << "Ding Ding something came in bool: " << ok << "and data: " << data.toString();
}


}
